<transformation>
  <info>
    <name>update_public_versions</name>
    <description>Update the dataset list of the 'current' version in the 'public' workspaces of publishers</description>
    <extended_description>This transformation retrieves a list of publishers from the IATI Registry, and then for each publisher retrieves the current datasets.

It then uses the DataWorkbench API to find all available md5s for the active datasets, and stores these in the 'version' data.</extended_description>
    <trans_version>0.7</trans_version>
    <trans_type>Normal</trans_type>
    <trans_status>1</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection />
        <schema />
        <table />
        <size_limit_lines />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject />
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject />
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject />
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject />
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>Y</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>Y</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>Y</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection />
        <schema />
        <table />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>N</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>N</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>N</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>N</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>N</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>N</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>N</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>N</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>N</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>N</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>N</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>N</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>N</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>N</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>N</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>N</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>N</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>N</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>N</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>N</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>N</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>N</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>N</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>N</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>N</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>N</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>N</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection />
      <table />
      <field />
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file />
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2018/02/25 11:52:40.943</created_date>
    <modified_user>-</modified_user>
    <modified_date>2018/04/19 23:26:30.262</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
    <notepad>
      <note>Get the publishers from the Registry
Get the datasets for the publisher</note>
      <xloc>16</xloc>
      <yloc>48</yloc>
      <width>221</width>
      <heigth>46</heigth>
      <fontname>Alegreya Sans</fontname>
      <fontsize>11</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>If there are datasets:
Check which versions we have
based on dataset name

If so: get the relevant md5s:
most recent, up to first validated version

Add the md5s to the version record.</note>
      <xloc>16</xloc>
      <yloc>432</yloc>
      <width>244</width>
      <heigth>154</heigth>
      <fontname>Alegreya Sans</fontname>
      <fontsize>11</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>For all discarded md5s
(newer versions with completed
JSON, SVRL reports available):

Add a "discard" field to the record
for future "garbage collection".</note>
      <xloc>1296</xloc>
      <yloc>432</yloc>
      <width>202</width>
      <heigth>118</heigth>
      <fontname>Alegreya Sans</fontname>
      <fontsize>11</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <order>
    <hop>
      <from>Check for HTTP 200 (IATI)</from>
      <to>Iterate over publishers</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Construct version record</from>
      <to>Upsert version</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get publishers from Registry</from>
      <to>Check for HTTP 200 (IATI)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Iterate over publishers</from>
      <to>Prepare URL to get packages</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Check for HTTP 200 (packages)</from>
      <to>Get number of datasets</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get number of datasets</from>
      <to>Check for datasets</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Check for datasets</from>
      <to>Add empty list of md5</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Check for datasets</from>
      <to>Prepare to get datasets</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Prepare to get datasets</from>
      <to>Get our datasets</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Select required fields</from>
      <to>Construct version record</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Prepare URL to get packages</from>
      <to>Get packages for publisher</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get packages for publisher</from>
      <to>Check for HTTP 200 (packages)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Add empty list of md5</from>
      <to>Construct version record</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Start</from>
      <to>Get publishers from Registry</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get our datasets</from>
      <to>Gather md5s to show and discard</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Gather md5s to show and discard</from>
      <to>Select required fields</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Gather md5s to show and discard</from>
      <to>Process md5s to discard</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Prepare "discard" field</from>
      <to>Upsert iati-dataset</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Process md5s to discard</from>
      <to>md5 to discard is not null</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>md5 to discard is not null</from>
      <to>Prepare "discard" field</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>Add empty list of md5</name>
    <type>Constant</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <fields>
      <field>
        <name>md5</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif>[]</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>336</xloc>
      <yloc>560</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Check for HTTP 200 (IATI)</name>
    <type>FilterRows</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <send_true_to>Iterate over publishers</send_true_to>
    <send_false_to />
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>registry_http</leftvalue>
        <function>=</function>
        <rightvalue />
        <value>
          <name>constant</name>
          <type>Integer</type>
          <text>200</text>
          <length>-1</length>
          <precision>0</precision>
          <isnull>N</isnull>
          <mask>####0;-####0</mask>
        </value>
      </condition>
    </compare>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>944</xloc>
      <yloc>48</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Check for HTTP 200 (packages)</name>
    <type>FilterRows</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <send_true_to>Get number of datasets</send_true_to>
    <send_false_to />
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>publisher_http</leftvalue>
        <function>=</function>
        <rightvalue />
        <value>
          <name>constant</name>
          <type>Integer</type>
          <text>200</text>
          <length>-1</length>
          <precision>0</precision>
          <isnull>N</isnull>
          <mask>####0;-####0</mask>
        </value>
      </condition>
    </compare>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>944</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Check for datasets</name>
    <type>FilterRows</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <send_true_to>Prepare to get datasets</send_true_to>
    <send_false_to>Add empty list of md5</send_false_to>
    <compare>
      <condition>
        <negated>N</negated>
        <conditions>
          <condition>
            <negated>N</negated>
            <leftvalue>dataset_success</leftvalue>
            <function>=</function>
            <rightvalue />
            <value>
              <name>constant</name>
              <type>Boolean</type>
              <text>Y</text>
              <length>-1</length>
              <precision>-1</precision>
              <isnull>N</isnull>
              <mask />
            </value>
          </condition>
          <condition>
            <negated>N</negated>
            <operator>AND</operator>
            <leftvalue>dataset_count</leftvalue>
            <function>&gt;</function>
            <rightvalue />
            <value>
              <name>constant</name>
              <type>Integer</type>
              <text>0</text>
              <length>-1</length>
              <precision>0</precision>
              <isnull>N</isnull>
              <mask>#</mask>
            </value>
          </condition>
        </conditions>
      </condition>
    </compare>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>336</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Construct version record</name>
    <type>ScriptValueMod</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>// Version record data to add
var v = {
  'md5': JSON.parse(md5)
}

// Version selection criteria
var vw = {
  'slug': 'current',
  'workspace-slug': 'public',
  'owner-slug': organisation_record
}

version = JSON.stringify(v)
versionwhere = JSON.stringify(vw)
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>versionwhere</name>
        <rename>versionwhere</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>version</name>
        <rename>version</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>544</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Gather md5s to show and discard</name>
    <type>ScriptValueMod</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>published_sets = {}
JSON.parse(dataset_records).forEach( function(ds) {
  published_sets[ds.name]=true;
});

md5show = [];
md5discard = [];

group = "";
publictitle = "";
jsondone = false;
svrldone = false;

JSON.parse(our_datasets).forEach( function (ds) {
  md5 = ds.md5;

  if (group !== ds.name) {
    group = ds.name;
    jsondone = false;
    svrldone = false;

	// is this dataset name (minus '.xml') in the list of published sets?
    published = ds.filename.slice(0, -4) in published_sets;
  }

  if (!published) {
    md5discard.push(md5);
  } else {
    if (!jsondone) {
      md5show.push(md5);
    }

    if (jsondone &amp;&amp; svrldone) {
      md5discard.push(md5);
    }

    svrldone |= "svrl-updated" in ds;
    jsondone |= "json-updated" in ds;
  }

});

md5 = JSON.stringify(md5show);
discardmd5s = JSON.stringify(md5discard);</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>md5</name>
        <rename>md5</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>discardmd5s</name>
        <rename>discardmd5s</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>944</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Get number of datasets</name>
    <type>JsonInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <include>N</include>
    <include_field />
    <rownum>N</rownum>
    <addresultfile>N</addresultfile>
    <readurl>N</readurl>
    <removeSourceField>Y</removeSourceField>
    <IsIgnoreEmptyFile>N</IsIgnoreEmptyFile>
    <doNotFailIfNoFile>Y</doNotFailIfNoFile>
    <ignoreMissingPath>Y</ignoreMissingPath>
    <rownum_field />
    <file>
      <name />
      <filemask />
      <exclude_filemask />
      <file_required>N</file_required>
      <include_subfolders>N</include_subfolders>
    </file>
    <fields>
      <field>
        <name>dataset_count</name>
        <path>$.result.count</path>
        <type>Integer</type>
        <format />
        <currency />
        <decimal />
        <group />
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>dataset_success</name>
        <path>$.success</path>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>dataset_records</name>
        <path>$.result.results</path>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
    </fields>
    <limit>0</limit>
    <IsInFields>Y</IsInFields>
    <IsAFile>N</IsAFile>
    <valueField>publisher_result</valueField>
    <shortFileFieldName />
    <pathFieldName />
    <hiddenFieldName />
    <lastModificationTimeFieldName />
    <uriNameFieldName />
    <rootUriNameFieldName />
    <extensionFieldName />
    <sizeFieldName />
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>336</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Get our datasets</name>
    <type>HTTP</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <url>${DWB_API_URL}/iati-datasets</url>
    <urlInField>N</urlInField>
    <urlField />
    <encoding>UTF-8</encoding>
    <httpLogin />
    <httpPassword>Encrypted </httpPassword>
    <proxyHost />
    <proxyPort />
    <socketTimeout>10000</socketTimeout>
    <connectionTimeout>10000</connectionTimeout>
    <closeIdleConnectionsTime>-1</closeIdleConnectionsTime>
    <lookup>
      <arg>
        <name>filter</name>
        <parameter>filter</parameter>
      </arg>
    </lookup>
    <result>
      <name>our_datasets</name>
      <code>our_datasets_http</code>
      <response_time />
      <response_header />
    </result>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>752</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Get packages for publisher</name>
    <type>HTTP</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <url>${IATI_API_URL}/${IATI_API_PACKAGE_SEARCH}</url>
    <urlInField>N</urlInField>
    <urlField />
    <encoding>UTF-8</encoding>
    <httpLogin />
    <httpPassword>Encrypted </httpPassword>
    <proxyHost />
    <proxyPort />
    <socketTimeout>10000</socketTimeout>
    <connectionTimeout>10000</connectionTimeout>
    <closeIdleConnectionsTime>-1</closeIdleConnectionsTime>
    <lookup>
      <arg>
        <name>iati_get_packages_q</name>
        <parameter>q</parameter>
      </arg>
    </lookup>
    <result>
      <name>publisher_result</name>
      <code>publisher_http</code>
      <response_time />
      <response_header />
    </result>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>752</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Get publishers from Registry</name>
    <type>HTTP</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <url>${IATI_API_URL}/${IATI_API_GET_ALL_ORGS}</url>
    <urlInField>N</urlInField>
    <urlField />
    <encoding>UTF-8</encoding>
    <httpLogin />
    <httpPassword>Encrypted </httpPassword>
    <proxyHost />
    <proxyPort />
    <socketTimeout>60000</socketTimeout>
    <connectionTimeout>10000</connectionTimeout>
    <closeIdleConnectionsTime>-1</closeIdleConnectionsTime>
    <lookup>
    </lookup>
    <result>
      <name>registry_result</name>
      <code>registry_http</code>
      <response_time />
      <response_header />
    </result>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>752</xloc>
      <yloc>48</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Iterate over publishers</name>
    <type>JsonInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <include>N</include>
    <include_field />
    <rownum>N</rownum>
    <addresultfile>N</addresultfile>
    <readurl>N</readurl>
    <removeSourceField>Y</removeSourceField>
    <IsIgnoreEmptyFile>N</IsIgnoreEmptyFile>
    <doNotFailIfNoFile>Y</doNotFailIfNoFile>
    <ignoreMissingPath>Y</ignoreMissingPath>
    <rownum_field />
    <file>
      <name />
      <filemask />
      <exclude_filemask />
      <file_required>N</file_required>
      <include_subfolders>N</include_subfolders>
    </file>
    <fields>
      <field>
        <name>organisation_record</name>
        <path>$.result[*]</path>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>both</trim_type>
        <repeat>N</repeat>
      </field>
    </fields>
    <limit>0</limit>
    <IsInFields>Y</IsInFields>
    <IsAFile>N</IsAFile>
    <valueField>registry_result</valueField>
    <shortFileFieldName />
    <pathFieldName />
    <hiddenFieldName />
    <lastModificationTimeFieldName />
    <uriNameFieldName />
    <rootUriNameFieldName />
    <extensionFieldName />
    <sizeFieldName />
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>336</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Prepare "discard" field</name>
    <type>ScriptValueMod</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

discard = {"discard": true}
where = {"md5": discardmd5, "publisher": organisation_record}

discardfield = JSON.stringify(discard)
wherefield = JSON.stringify(where)</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>discardfield</name>
        <rename>discardfield</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>wherefield</name>
        <rename>wherefield</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1184</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Prepare URL to get packages</name>
    <type>ScriptValueMod</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

iati_get_packages_q = 'organization:' + organisation_record
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>iati_get_packages_q</name>
        <rename>iati_get_packages_q</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>544</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Prepare to get datasets</name>
    <type>ScriptValueMod</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

f = {"where": {"publisher": organisation_record}, "order": ["name", "downloaded DESC"]}
filter = JSON.stringify(f)</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>filter</name>
        <rename>filter</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>544</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Process md5s to discard</name>
    <type>JsonInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <include>N</include>
    <include_field />
    <rownum>N</rownum>
    <addresultfile>N</addresultfile>
    <readurl>N</readurl>
    <removeSourceField>Y</removeSourceField>
    <IsIgnoreEmptyFile>N</IsIgnoreEmptyFile>
    <doNotFailIfNoFile>Y</doNotFailIfNoFile>
    <ignoreMissingPath>Y</ignoreMissingPath>
    <rownum_field />
    <file>
      <name />
      <filemask />
      <exclude_filemask />
      <file_required>N</file_required>
      <include_subfolders>N</include_subfolders>
    </file>
    <fields>
      <field>
        <name>discardmd5</name>
        <path>$.[*]</path>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
    </fields>
    <limit>0</limit>
    <IsInFields>Y</IsInFields>
    <IsAFile>N</IsAFile>
    <valueField>discardmd5s</valueField>
    <shortFileFieldName />
    <pathFieldName />
    <hiddenFieldName />
    <lastModificationTimeFieldName />
    <uriNameFieldName />
    <rootUriNameFieldName />
    <extensionFieldName />
    <sizeFieldName />
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1184</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Select required fields</name>
    <type>SelectValues</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <fields>
      <field>
        <name>start</name>
      </field>
      <field>
        <name>registry_http</name>
      </field>
      <field>
        <name>organisation_record</name>
      </field>
      <field>
        <name>iati_get_packages_q</name>
      </field>
      <field>
        <name>publisher_http</name>
      </field>
      <field>
        <name>dataset_count</name>
      </field>
      <field>
        <name>dataset_success</name>
      </field>
      <field>
        <name>dataset_records</name>
      </field>
      <field>
        <name>md5</name>
      </field>
      <select_unspecified>N</select_unspecified>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>544</xloc>
      <yloc>560</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Start</name>
    <type>RowGenerator</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <fields>
      <field>
        <name>start</name>
        <type>Integer</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif>1</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <limit>1</limit>
    <never_ending>N</never_ending>
    <interval_in_ms>5000</interval_in_ms>
    <row_time_field>now</row_time_field>
    <last_time_field>FiveSecondsAgo</last_time_field>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>336</xloc>
      <yloc>48</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Upsert iati-dataset</name>
    <type>Rest</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <applicationType>JSON</applicationType>
    <method>POST</method>
    <url>${DWB_API_URL}/iati-datasets/upsertWithWhere</url>
    <urlInField>N</urlInField>
    <dynamicMethod>N</dynamicMethod>
    <methodFieldName />
    <urlField />
    <bodyField>discardfield</bodyField>
    <httpLogin />
    <httpPassword>Encrypted </httpPassword>
    <proxyHost />
    <proxyPort />
    <preemptive>N</preemptive>
    <trustStoreFile />
    <trustStorePassword>Encrypted </trustStorePassword>
    <headers>
      </headers>
    <parameters>
      <parameter>
        <field>wherefield</field>
        <name>where</name>
      </parameter>
    </parameters>
    <matrixParameters>
      </matrixParameters>
    <result>
      <name>discard_result</name>
      <code>discard_http</code>
      <response_time />
      <response_header />
    </result>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1376</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Upsert version</name>
    <type>Rest</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <applicationType>JSON</applicationType>
    <method>POST</method>
    <url>${DWB_API_URL}/versions/upsertWithWhere</url>
    <urlInField>N</urlInField>
    <dynamicMethod>N</dynamicMethod>
    <methodFieldName />
    <urlField />
    <bodyField>version</bodyField>
    <httpLogin />
    <httpPassword>Encrypted </httpPassword>
    <proxyHost />
    <proxyPort />
    <preemptive>N</preemptive>
    <trustStoreFile />
    <trustStorePassword>Encrypted </trustStorePassword>
    <headers>
      </headers>
    <parameters>
      <parameter>
        <field>versionwhere</field>
        <name>where</name>
      </parameter>
    </parameters>
    <matrixParameters>
      </matrixParameters>
    <result>
      <name>version_result</name>
      <code>version_http</code>
      <response_time />
      <response_header />
    </result>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>752</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>md5 to discard is not null</name>
    <type>FilterRows</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <send_true_to>Prepare "discard" field</send_true_to>
    <send_false_to />
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>discardmd5</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue />
      </condition>
    </compare>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1184</xloc>
      <yloc>560</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
</transformation>
